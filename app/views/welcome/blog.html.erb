<body class="body">
  <div class="text content">
    <h1>ブログ作成</h1>
      <p>
        この章では、ブログを作成していきましょう。少し長くなりそうなので新しくアプリケーションを作成します。<br>
        現在、page というディレクトリにいた場合は、workspaceディレクトリまで戻りましょう。戻り方は、「cd ..」で１つ前のディレクトリまで戻れます。<br>
        それでは、新しくblogという名前のアプリケーションを作成します。<br>
        「rails new blog -d postgresql」コマンドを実行して「blog」ディレクトリに移動しましょう。<br>
        これからブログ機能を作成していきますがブログ機能で必要なのが「ブログ作成画面」「ブログ保存」「ブログ一覧画面」「ブログ詳細画面」「ブログ編集画面」
        「ブログ更新」「ブログ削除」です。
        まずは、config/routes.rbを開き下記画像のようにルーティングを記述しましょう。
        <img src="image35.png">
        次は、コントローラーの作成でしたね。<br>
        「rails g controller tweets」コマンドを実行してコントローラーを作成したらその作成した
        「tweets_controller.rb」ファイルを開き下記画像のようにアクションを記述していきましょう。
        <img src="image36.png">
        次に、モデルを作成します。<br>
        「rails g model Tweet」コマンドを実行したら、db/migrate配下にマイグレーションファイルが作成されるので開いて下記画像のように追記しましょう。<br>
        t.データ型 :カラム名<br>
        <img src="image37.png">
        string型は、短い文字列の時に使用します。
        text型は、長い文字列の時時に使用します。
        マイグレーションファイルを作成したので「rake db:migrate」コマンドを実行しましょう。
        これで、titleとcontentが保存できるtweetsテーブルが作成されました。<br>
        先にtweets_,controllerのアクションの中身がどのような記述をするか確認してみましょう。
        <img src="image38.png">
        今は、分からなくて大丈夫です。1つ1つ確認していきましょう。<br>
        それでは、ブログ一覧画面から作成するのでindexアクションから見てみましょう。
        「Tweet」はモデル名です。「.all」で全ての値を取ってくるという命令です。その取ってきた値を「@tweets」変数に格納しています。</br>
        次は、ビューファイルを作成します。
        app/views/tweets配下に「index.html.erb」を作成し下記画像のように記述しましょう。
        <img src="image39.png">
        tweets_controllerのindexアクションで指定した「@tweets」変数の中が空(blank?)だったら「ブログが存在しません」と表示されるようにしてます。
        「else」でそれ以外、つまりブログが存在していたらそのブログを表示するようにしています。<br>
        「@tweet.each do |tweet|」で「@tweets」の中にある値を1つ1つ取り出して「tweet」変数に格納しています。
        1つ1つ取り出した値が「tweet」変数の中に格納されているのでその中のタイトルと内容を表示したいので<br>
        「tweet.title」「tweet.content」と記述しています。<br>
        「<%=」と「%」で「=」が付くのと付かないのがありますがこれはブラウザに表示するかしないかです。
        タイトルと内容はブラウザに表示させたいので「<%=」付けて記述しています。
        では、サーバーを起動して「rake routes」コマンドで一覧ページのルーティングを確認して一覧ページを表示しましょう。<br>
        「ブログが存在しません」と表示できていればうまくプログラムが動いています。<br>
        それでは、コマンドでブログを保存しましょう。<br>
        「rails c」コマンドを実行し「Tweet.create(title:"titleに保存したい文字列", content:"contentに保存したい文字列")」で実装しましょう。
        <img src="image40.png">
        これで1つブログが作成できたのでブラウザで確認しましょう。<br>
        次は、実際にブログ作成画面を作成してブログを保存していきましょう。tweets_controller.rbに戻ってnewアクションを確認しましょう。
        「Tweet.new」の「.new」とは「Tweet」の中にある「title」や「content」などの空のものを「@tweet」に格納しています。
        ブログの作成画面では、ユーザーがtitle欄やcontent欄に入力したものが保存されるので、titleやcontentは空でないといけないですよね。<br>
        次に、「new.html.erb」を作成して下記画像のように記述しましょう。
        

















      </p>
  </div>
</body>
